files: ^python/
fail_fast: true
repos:
  - repo: https://github.com/floatingpurr/sync_with_poetry
    rev: 1.1.0
    hooks:
      - id: sync_with_poetry
        args: [--config=.pre-commit-config.yaml, --db=python/.conf/packages_list.json, python/poetry.lock]
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-toml
        files: \.toml$
      - id: check-yaml
        files: \.yaml$
      - id: check-json
        files: \.json$
        exclude: ^python\/\.vscode\/.*
      - id: end-of-file-fixer
        files: \.py$
      - id: mixed-line-ending
        files: \.py$
      - id: debug-statements
        files: ^python\/semantic_kernel\/.*\.py$
      - id: check-ast
        name: Check Valid Python Samples
        types: ["python"]
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.8.5
    hooks:
      - id: nbqa-check-ast
        name: Check Valid Python Notebooks
        types: ["jupyter"]
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.2
    hooks:
    - id: pyupgrade
      args: [--py310-plus]
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.4.5
    hooks:
      - id: ruff
        args: [ --fix, --exit-non-zero-on-fix ]
  - repo: local
    hooks:
    - id: mypy
      files: ^python/semantic_kernel/
      name: mypy
      entry: poetry -C python/ run python -m mypy -p semantic_kernel --config-file=python/mypy.ini
      language: system
      types: [python]
      pass_filenames: false
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        args: ["-c", "python/pyproject.toml"]
        additional_dependencies: [ "bandit[toml]" ]